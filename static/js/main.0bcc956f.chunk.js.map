{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","selected","handleChange","event","value","target","setState","filterTodos","todos","filter","todo","title","toLowerCase","includes","display","completed","handleSelect","this","props","selectUserId","preparedTodos","className","action","type","name","placeholder","onChange","map","classnames","checked","key","id","readOnly","onClick","userId","React","Component","request","url","option","fetch","then","response","ok","Error","status","statusText","json","getUser","user","data","CurrentUser","updateUser","prevProps","email","phone","clearUser","App","selectedUserId","clearUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bcc956f.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    selected: 'all',\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({ query: value });\n  }\n\n  filterTodos = (todos, query) => {\n    if (!query) {\n      return todos;\n    }\n\n    return todos.filter((todo) => {\n      const { title } = todo;\n\n      if (typeof (title) === 'string'\n        && title.toLowerCase().includes(query.toLowerCase())) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  display = (todos, selected) => {\n    switch (selected) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  }\n\n  handleSelect = (event) => {\n    const { value } = event.target;\n\n    this.setState({ selected: value });\n  }\n\n  render() {\n    const { todos, selectUserId } = this.props;\n    const { query, selected } = this.state;\n\n    let preparedTodos = this.filterTodos(todos, query);\n\n    preparedTodos = this.display(preparedTodos, selected);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form\n            action=\"/\"\n            className=\"TodoList__form\"\n          >\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"TodoList__input\"\n              placeholder=\"enter title here to find something\"\n              value={query}\n              onChange={this.handleChange}\n            />\n\n            <select\n              className=\"TodoList__select\"\n              name=\"select\"\n              value={selected}\n              onChange={this.handleSelect}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </form>\n          <ul className=\"TodoList__list\">\n            {preparedTodos.map(todo => (\n              <li\n                className={classnames('TodoList__item', {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': !todo.checked,\n                })}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>\n                    {todo.title}\n                  </p>\n                </label>\n\n                <button\n                  className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUserId(todo.userId);\n                  }}\n                >\n                  User\n                  {' #'}\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    userId: PropTypes.number,\n  })).isRequired,\n  selectUserId: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\nconst userUrl = '/users/';\nconst todosUrl = '/todos';\n\nconst request = (url, option) => fetch(`${BASE_URL}${url}`, option)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(\n        `${response.status} - ${response.statusText}`,\n      );\n    }\n\n    return response.json();\n  });\n\nexport const getTodos = () => request(todosUrl)\n  .then(todos => todos.data);\n\nexport const getUser = (userId) => {\n  const url = `${userUrl}${userId}`;\n\n  return request(url)\n    .then(user => user.data);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getUser } from '../../api/api';\n\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.updateUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.updateUser();\n    }\n  }\n\n  updateUser = () => {\n    const { userId } = this.props;\n\n    getUser(userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return (\n        <div className=\"CurrentUser__loading\">\n          <i className=\"fas fa-spinner fa-spin CurrentUser__spin\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Select user\n            {' '}\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n        <div className=\"CurrentUser__btn-wrap\">\n          <button\n            className=\"fas fa-recycle CurrentUser__btn\"\n            onClick={() => {\n              this.props.clearUser();\n            }}\n            type=\"button\"\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport './styles/general.scss';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  selectUserId = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  clearUserId = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUserId={this.selectUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}